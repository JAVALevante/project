<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<mvc:annotation-driven></mvc:annotation-driven>

	<context:component-scan base-package="com.niit"></context:component-scan>

	<bean id="filter" class="com.niit.filter.LoginFilter" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.niit.filter.LoginFilter"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- rest json related... start -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- rest json related... end -->

	<!-- SessionFactory对象 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>
	<!-- HibernateTemplate对象 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- dao对象 -->
	<bean id="userDao" class="com.niit.dao.UserDao">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	<bean id="carsDao" class="com.niit.dao.CarsDao">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	<!-- biz对象 -->
	<bean id="userService" class="com.niit.service.UserService">
		<property name="userDao" ref="userDao" />
	</bean>
	<bean id="carsService" class="com.niit.service.CarsService">
		<property name="carsDao" ref="carsDao" />
	</bean>
	<!-- contoller对象 -->
	<bean id="userController" class="com.niit.controller.UserController">
		<property name="carsService" ref="carsService" />
		<property name="userService" ref="userService" />
	</bean>
	<bean id="carsController" class="com.niit.controller.CarsController">
		<property name="carsService" ref="carsService" />
		<property name="userService" ref="userService" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="find*" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="*" isolation="DEFAULT" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* com.niit.service.*.*(..))" id="pointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
</beans>


